name: CDK Deploy on AWS

on:
    push:
        branches:
            - main
      
jobs:
    build:
        runs-on: ubuntu-latest
        environment: Production
        permissions:
            contents: read
            id-token: write
        defaults:
            run: 
                working-directory: ${{ vars.DIRECTORIO_CDK }}
        env:
            APP_NAME: ${{ vars.APP_NAME }}
            ACCOUNT_AWS: ${{ vars.ACCOUNT_AWS }}
            REGION_AWS: ${{ vars.REGION_AWS }}
            VPC_ID: ${{ vars.VPC_ID }}
            SUBNET_ID_1: ${{ vars.SUBNET_ID_1 }}
            SUBNET_ID_2: ${{ vars.SUBNET_ID_2 }}
            MASTER_USERNAME: ${{ secrets.MASTER_USERNAME }}
            MASTER_PASSWORD: ${{ secrets.MASTER_PASSWORD }}
            LAMBDA_SECURITY_GROUP_ID: ${{ vars.LAMBDA_SECURITY_GROUP_ID }}
            EC2_SECURITY_GROUP_ID: ${{ vars.EC2_SECURITY_GROUP_ID }}
            SUBAPP_01_NAME: ${{ vars.SUBAPP_01_NAME }}
            SUBAPP_01_DATABASE: ${{ secrets.SUBAPP_01_DATABASE }}
            SUBAPP_01_ADM_USERNAME: ${{ secrets.SUBAPP_01_ADM_USERNAME }}
            SUBAPP_01_ADM_PASSWORD: ${{ secrets.SUBAPP_01_ADM_PASSWORD }}
            SUBAPP_01_APP_USERNAME: ${{ secrets.SUBAPP_01_APP_USERNAME }}
            SUBAPP_01_APP_PASSWORD: ${{ secrets.SUBAPP_01_APP_PASSWORD }}
            SUBAPP_02_NAME: ${{ vars.SUBAPP_02_NAME }}
            SUBAPP_02_DATABASE: ${{ secrets.SUBAPP_02_DATABASE }}
            SUBAPP_02_ADM_USERNAME: ${{ secrets.SUBAPP_02_ADM_USERNAME }}
            SUBAPP_02_ADM_PASSWORD: ${{ secrets.SUBAPP_02_ADM_PASSWORD }}
            SUBAPP_02_APP_USERNAME: ${{ secrets.SUBAPP_02_APP_USERNAME }}
            SUBAPP_02_APP_PASSWORD: ${{ secrets.SUBAPP_02_APP_PASSWORD }}
            PRIVATE_WITH_INTERNET_ID_1: ${{ vars.PRIVATE_WITH_INTERNET_ID_1 }}
            PRIVATE_WITH_INTERNET_ID_2: ${{ vars.PRIVATE_WITH_INTERNET_ID_2 }}
            INITIAL_CREATION_HANDLER: ${{ vars.INITIAL_CREATION_HANDLER }}
            INITIAL_CREATION_PUBLISH_ZIP: ${{ vars.INITIAL_CREATION_PUBLISH_ZIP }}
        steps:
            - name: Checkout Repositorio
              uses: actions/checkout@v4
      
            - name: Instalar .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: ${{ vars.VERSION_DOTNET }}
      
            - name: Instalar Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ vars.VERSION_NODEJS }}
                  
            - name: Instalar AWS CDK
              run: npm install -g aws-cdk
                  
            - name: Publish .NET Lambda
              working-directory: ${{ vars.INITIAL_CREATION_DIRECTORY }}
              run: dotnet publish --property:PublishDir=../publish --runtime linux-arm64
              
            - name: Compress Publish Directory
              working-directory: ${{ vars.INITIAL_CREATION_DIRECTORY }}/publish
              run: zip -r -q -T ./publish.zip ./*
      
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
              with:
                  aws-region: ${{ vars.REGION_AWS }}
                  role-to-assume: ${{ vars.ARN_GITHUB_ROLE }}
                  
            - name: CDK Synth
              run: cdk synth
              
            - name: CDK Deploy
              run: cdk deploy --require-approval never
          